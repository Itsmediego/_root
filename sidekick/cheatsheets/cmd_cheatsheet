
┌─┐┬ ┬┌─┐┌─┐┌┬┐  ┌─┐┬ ┬┌─┐┌─┐┌┬┐
│  ├─┤├┤ ├─┤ │   └─┐├─┤├┤ ├┤  │
└─┘┴ ┴└─┘┴ ┴ ┴   └─┘┴ ┴└─┘└─┘ ┴

Linux kernel
============

> Get .config of running kernel
		zcat /proc/config.gz > running.config
		cat /boot/config
		cat /boot/config-$(uname -r)

> Compile and install x86 linux kernel on ubuntu PC
		make x86_64_defconfig
		make modules_install
		make install

		>> To change name of the kernel, in the Top level //kernel/Makefile
			  EXTRAVERSION = -batman-0.8.9

> Removing the kernel
		Remove following files/dirs
		/boot/vmlinuz-4.6.0-rc1-00190-g05cf807
		/boot/initrd-vmlinuz-4.6.0-rc1-00190-g05cf807
		/boot/System-map-vmlinuz-4.6.0-rc1-00190-g05cf807
		/boot/config-4.6.0-rc1-00190-g05cf807
		/lib/modules/4.6.0-rc1-00190-g05cf807/
		Update grub configuration file /etc/grub.conf or /boot/grub/menu.lst to point to correct kernel version.
			sudo update-grub

> make -j4 | tee build_log

Old kernel logs
===============

> /var/log/kern.log


grep and find
=============

> [GREP two words on the same line]
       grep -rnw --color 'spinlock_t' ../../../../.. | grep --color "typedef"
       grep "word1" FILE | grep "word2"

> [GREP only specific files]
       grep -rn --include=\*.{dts,dtsi} "brcm,bcm2835-i2s" ./
       grep -rn  --include=*.dts --include=*.dtsi "brcm,bcm2835-i2s" ./
       grep --color -rn --include \*.mk --include \*.h "kernel-headers"
       grep -rnw --include=*.c --include \*.S s_init

> [GREP exclude c and h files]
       grep –color -rn --exclude=*.c --exclude=*.h “omap4xxx”

> [GREP exclude directory]
	grep -rn --include=*.c --exclude-dir=codecs "bias_level" ./sound/soc/
	
> [GREP two different lines]
	cat /sys/kernel/debug/1-0018/regmap | grep -e 51 -e b3 -e b6 -e b9
	watch -n1 "cat /sys/kernel/debug/1-0018/regmap | grep -e 51 -e b3 -e b6 -e b9"

> [This is returning duplicates]
       find ./ -name “*.[c|h]” | xargs grep --color -n -A4 “CONFIG_SPLASH”

       >> [USE exec]
              find ./ -name "*.[c|h]" -exec grep --color -Hrn "kernel-headers" {} \; -print

> [find in specific file extensions only]
       find ./ -name "*.avi" -o -name "*.srt" -exec grep --color -Hrn "Castle" {} \; -print

> [Find file serial.c]
       find ./ -name 'serial.c'

> nproc – shows the number of cores available
> lscpu – gathers CPU info in readable format

> du - estimate file/directory space usage
> du -sh ./u-boot    -s : summarize
                     -c : produces a grand total

> [ list only the top level directories, no recurssion]
		du -h --max-depth=1

> [ Replace spaces at the end of each line ]
		sed --in-place 's/[[:space:]]\+$//' cscope_maps.vim

rsync
=====
> [Recursion and want to preserve almost everything]
      rsync -ah --info=progress2 --partial /media/42C0-312A/softwares/ ./Public/

> [If you are getting permissions error while copying]
	> [File by file progress and stats]
    	 rsync -rltzuv --progress --stats /media/42C0-312A/camera/ ~/Camera

	> [Outputs statistics based on the whole transfer, rather than individual files]
		 rsync -rltzu --info=progress2 -h --partial /media/42C0-312A/documents/ ./Documents/

opening .img file [SO]
======================

parted ubuntu-15.04-snappy-armhf-rpi2.img

Inside (parted) prompt
       > (parted) unit B
       > (parted) print

       Number  Start        End          Size         Type     File system  Flags
       1       4194304B     71303167B    67108864B    primary  fat32        boot, lba
       2       71303168B    1145044991B  1073741824B  primary  ext4
       3       1145044992B  2218786815B  1073741824B  primary  ext4
       4       2218786816B  3899654143B  1680867328B  primary  ext4

sudo mount -o loop,ro,offset=4194304 ~/rpi/ubuntu-15.04-snappy-armhf-rpi2.img /tmp/ubuntu-snappy/

Mouting a ext4 partition
sudo mount -o loop,rw,offset=67108864 back-up-32-gib-RPi-audio.img /tmp/rootfs


Symbolic links
==============
sudo ln -s ~/eagle-7.5.0/bin/eagle /usr/bin/eagle

git commands
============

> [To View only files changed, not the diff in each file]
    git show --pretty="format:" --name-only 5c5b389

> [Create a bundle and clone it else where to preserve the .git directory]
       git bundle create kernel.bundle --all

       >> [copy it where ever u want and..]
              git clone kernel.bundle
> [Try this]
       git diff --staged

> git config --global color.ui true

> [ Remove commit msg and keep the files added in staging area ]
	git reset --soft HEAD~

> [ Remove a file ]
	git reset HEAD -- <file-to-exclude>

> [There is no tracking information for the current branch.]
	git pull https://kernel.googlesource.com/pub/scm/linux/kernel/git/torvalds/linux master

converting video to mp3 - avconv video converter
================================================
sudo apt-get install libavcodec-extra libav-tools
avconv -i video.mp4 -b 256K audio.mp3

Multiple lines into one line 
----------------------------

	ls -1 | paste -sd " " -
	ls -1 | tr '\n' ' '
	ls -m
	
for looping for batch processing
--------------------------------
for input in *.mp4; do avconv -i "$input" -b 256K "${input}.mp3"; done

vim
===

> [ delete all trailing whitespace (at the end of each line)]
    :%s/\s\+$//gc

> [ Replace "( " with "(" ]
	:.,$s/( /(/gc

> [ Replace "+=" with " += " ]
	:.,$s/+=/ += /gc

> [ Remove all lines starting with {pattern} ]
	:%s/{pattern}.*//gc
		|		|
		 #define

> [ Replace all occurances of string ]
	:%s/old/new/gc

> [ Replace all occurances within a range ]
	:31,57s/old/new/gc

> [ Converting tabs to spaces ]
	:set tabstop=4 shiftwidth=4 expandtab
	:retab

> [ Convert space to tab ]
	:set noexpandtab
	:retab!


setting up cscope
==================

find `pwd` -name "*.c" -o -name "*.h" -o -name "*.S" > cscope.files
cscope -q -R -b -i cscope.files
mkdir ~/.vim/plugin

> create cscope_maps.vim
  Download cscope_maps.vim and copy to ~/.vim/plugin/cscope_maps.vim
  Remove all trailing white spaces in the file

In ~/.bashrc
       export CSCOPE_DB=<path-to-cscope.out>/cscope.out
In ~/.vimrc
       cs add $CSCOPE_DB


It should work right away..
Ctrl+\ s – Find String
Ctrl+\ g – Find global definition
Ctrl+\ d – Find functions called by this function
etc etc etc

If it doesn't check stack overflow favorites for debugging techniques.

Wget
====
-U will send a "User-Agent"
for i in {01..96}; do wget -U firefox "http://www.impactscan.org/slides/xrayct/img0${i}.gif"; done

> [Recursively fetch a directory]
	wget --user-agent="User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:32.0) Gecko/20100101 Firefox/32.0" --recursive --no-parent --reject "index.html*" --accept "*.mkv" http://blah-blah/one/two/abc/s01/

> [Resume an interrupted download]
	wget --user-agent="User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:32.0) Gecko/20100101 Firefox/32.0" -c -r --no-parent --reject "index.html*" -A "*.mkv" http://blah-blah/one/two/abc/s01/

> [Get from links]
	wget -c --user-agent="User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:32.0) Gecko/20100101 Firefox/32.0" -i links

Terminator
==========

sudo apt-get install libvte-2.90-dev
sudo apt-get install libvte-dev
sudo apt-get install python python-vte python-gtk2

sudo ./setup.py install --record=install-files.txt
gsettings set org.gnome.desktop.default-applications.terminal exec 'terminator'


partition layout in android phones
==================================

abd shell

root@anzhen4_mrd7:/ # ls -la /dev/block/platform/intel/by-label/
lrwxrwxrwx root     root              2001-01-29 23:54 ESP -> /dev/block/mmcblk0p1
lrwxrwxrwx root     root              2001-01-29 23:54 boot -> /dev/block/mmcblk0p3
lrwxrwxrwx root     root              2001-01-29 23:54 cache -> /dev/block/mmcblk0p12
lrwxrwxrwx root     root              2001-01-29 23:54 config -> /dev/block/mmcblk0p11
lrwxrwxrwx root     root              2001-01-29 23:54 data -> /dev/block/mmcblk0p15
lrwxrwxrwx root     root              2001-01-29 23:54 factory -> /dev/block/mmcblk0p9
lrwxrwxrwx root     root              2001-01-29 23:54 fastboot -> /dev/block/mmcblk0p5

root@anzhen4_mrd7:/ # cat /poc/partitions
179        0   15388672 mmcblk0
179        1      65536 mmcblk0p1
179        2      65536 mmcblk0p2
179        3      16384 mmcblk0p3
179        4      16384 mmcblk0p4
179        5      16384 mmcblk0p5
179        6      16384 mmcblk0p6


lsblk
=====
lists information about all or the specified block devices.

       bhargav@bhargav-Ideapad-Z570:/u/raspberry-pi/linux$ lsblk
       NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
       sda      8:0    0 465.8G  0 disk
       ├─sda1   8:1    0    50G  0 part
       ├─sda2   8:2    0    14G  0 part /
       ├─sda3   8:3    0     1K  0 part
       ├─sda5   8:5    0  18.6G  0 part /home
       ├─sda6   8:6    0   3.7G  0 part [SWAP]
       └─sda7   8:7    0 379.3G  0 part /u
       sdb      8:16   1   3.7G  0 disk
       └─sdb1   8:17   1   3.7G  0 part /media/bhargav/3438-3634
              sdc      8:32   1  14.7G  0 disk
       └─sdc1   8:33   1  14.7G  0 part /media/bhargav/jumper
       sr0     11:0    1  1024M  0 rom

xz compression
==============
xz <filename>
Tried it on ubuntu snappy core img file. size reduced from 3.7GiB to 203MiB

xzcat <filename.xz>
Uncompresses the xz file

cat
===

> New cat command
       cat << ! >> /data/documents/cheatsheet
       allows me to type until I press ! and hit enter

chown
=====

> Change the file so it is owned by root
	sudo chown root:root /etc/systemd/system/tightvncserver.service

tar
===

> Extract the file in the specified directory (ex: /usr/local)
       tar -C /usr/local -xzf go1.5.1.linux-amd64.tar.gz

> Extract Linux kernel
       tar -Jxvf linux-4.2.3.tar.xz


kill
====
> Find and kill gedit
       ps aux | grep gedit | grep -v grep | awk '{print $2}' | xargs kill
or
       pkill gedit
or
       kill -9 `pidof gedit`

vbox mount
==========
> Put this in /etc/rc.local
	sudo mount -t vboxsf vmshare /home/bhargav/vmshare


Adding IDE to udev rules
========================
> cd /etc/udev/rules.d/
> Create a file
	The name must be a two digit number(choose a big number like 99),
	followed by a -, a name and .rules like "99-arduino.rules"
> Get the product and vendor ID of the devices connected
	dmesg
> Add the following line with appropriate changes to the product and vendor IDs
	SUBSYSTEMS=="usb", ATTRS{idProduct}=="2303", ATTRS{idVendor}=="067b", MODE="0666", GROUP="plugdev"



Trigger a notification when a job/process ends
==============================================

This will execute the command-after after the previous command has
exited (regardless of its exit code). The & will start it in background.

       > command; command-after &

If you care about a successful or failure exit, respectively use:

       > command && command-after-only-if-success &
       > command || command-after-only-if-fail &


Generate sound on PC
====================

speaker-test -c2 -t wav -l 4


Set Minicom width
=================
stty cols 140 rows 60

Wi-Fi Things
============

	Find all IPs connected to the router
	====================================
	sudo arp-scan  --localnet

	> With names
		sudo nmap -sP --disable-arp-ping 192.168.0.0/24

	SSID and Password of all networks
	=================================
	sudo grep -r '^psk=' /etc/NetworkManager/system-connections/

	Output:
		This will give you output like this:
		/etc/NetworkManager/system-connections/MyExampleSSID:psk=12345
		/etc/NetworkManager/system-connections/AnotherSSID:psk=password

	Find the SSID I'm connected to
	==============================
	iwgetid -r
	iwconfig

	Scan all wireless networks
	==========================
	sudo iwlist <interface> scan
		> interface = wlo1, wlan0, wlan1
	
	


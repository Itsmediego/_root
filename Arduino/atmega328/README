       d8888 88888888888                                       
      d88888     888                                           
     d88P888     888                                           
    d88P 888     888  88888b.d88b.   .d88b.   .d88b.   8888b.  
   d88P  888     888  888 "888 "88b d8P  Y8b d88P"88b     "88b 
  d88P   888     888  888  888  888 88888888 888  888 .d888888 
 d8888888888     888  888  888  888 Y8b.     Y88b 888 888  888 
d88P     888     888  888  888  888  "Y8888   "Y88888 "Y888888 
                                                  888          
                                             Y8b d88P          
                                              "Y88P"                               
v1.6.7

1. Signature
============

	ATmega328-PU - 0x1E 0x95 0x14 (PDIP)
	ATmega328P - 0x1E 0x95 0x0F (TQFP)

2. Flashing Bootloader
======================

	Patch the arduino-1.6.x/hardware/arduino/boards.txt file (Refer the boards.patch)

	To burn the bootloader:
	1. Upload the ArduinoISP sketch onto your Arduino board (//screens/Pro-Mini_ISP.png).
		Board: Arduino Uno or Pro-Mini
		Processor: ATmega328 (5V, 16 MHz)
		Programmer: AVRISP mkII
    	2. Wire up the Arduino board and microcontroller as shown in //screens/bootload-wiring-XTAL.png
	3. Connect a LED betwwen IO-13 (PIN-19) and GND
    	4. Apply settings as shown in //screens/bootload-settings.png
		Board: ATmega328-PU on breadboard (...)
		Programmer: Arduino as ISP
	5. Run Tools > Burn Bootloader. The LED will continuously blink while and after flashing 
	   the bootloader (only if successfully done).

3. Flashing Sketches
====================
	Unwire the Arduino. Make connections as shown in //screens/sketch-upload-connections.png

	To Flash Sketches:
	1. Apply settings as shown in //screens/sketch-upload-settings.png
		Board: ATmega328-PU on breadboard (...)
		Programmer: AVRISP mkII
	2. To Upload the sketch, press and hold the reset button. 
	3. Hit the upload button on the IDE
	4. Release the reset button as soon as characters are dumped on the IDE console.
	5. If the signature is inverted (i.e. if it expects ATMega328P signature) use the 
	   Arduino Pro-Mini (3.3V, 8MHz) setting from Tools->Board menu (blink-twice.png)
		Board: Arduino Uno or Pro-Mini
		Processor: ATmega328 (3.3V, 8 MHz)
		Programmer: AVRISP mkII

	<Link: http://forum.arduino.cc/index.php?topic=58670.15>

Handling Signature Problems (Obsolete)
============================================

> First time bootloader flashing. The problem was solved using the below method.

	avrdude: Expected signature for ATmega328P is 1E 95 0F          
		Double check chip, or use -F to override this check. Wrong microcontroller found.  
		Did you select the right board from the Tools > Board menu?

	<Link : http://forum.arduino.cc/index.php?topic=90214.0>
	Most likely cause: 
		You have an ATmega328-PU chip instead of an ATmega328P-PU chip.
		Device signature for ATMEGA328-PU = 0x 1E 95 14
		Signature for ATMEGA328P is 1E 95 0F

	If this is your problem, you can probably temporarily change the "uno.build.mcu" in boards.txt
	from "atmega328p" to just "atmega328" and burn the bootloader

	I Just changed the following -> diecimila.menu.cpu.atmega328.build.mcu=atmega328p to atmega328 
	(check flash-bootloader-success.log)

	No changes were made in the avrdude.conf file. 

> Patching tools/avr/etc/avrdude.conf file
	patch ./hardware/tools/avr/etc/avrdude.conf //patches/avrdude_conf.patch
	
	(OR)
	
> Separating out ATMega328 and ATMega328P is a good thing (//patches/avrdude_conf_diff.patch)
	Also refer to avrdude.rar in 
	http://www.instructables.com/id/Burning-the-Bootloader-on-ATMega328-using-Arduino-/?ALLSTEPS

Manipulating fuse bits using terminal (Risky business) 
======================================================

http://heliosoph.mit-links.info/arduinoisp-reading-writing-fuses-atmega328p/

[Reading Fuse bytes only when Arduino Is Connected]
---------------------------------------------------
	/usr/src/arduino-1.6.7/hardware/tools/avr/bin/avrdude 
	-C/usr/src/arduino-1.6.7/hardware/tools/avr/etc/avrdude.conf 
	-patmega328 -b19200 -P/dev/ttyUSB0 -cstk500v1 -v


[Modifying fuse bytes]
	For 16 MHz External Oscillator
	------------------------------
		/usr/src/arduino-1.6.7/hardware/tools/avr/bin/avrdude 
		-C/usr/src/arduino-1.6.7/hardware/tools/avr/etc/avrdude.conf 
		-v -patmega328 -cstk500v1 -P/dev/ttyUSB0 -b19200 -e -Ulock:w:0x3F:m 
		-Uefuse:w:0x05:m -Uhfuse:w:0xDA:m -Ulfuse:w:0xFF:m 

	For 8 MHz Internal Oscillator
	-----------------------------
		/usr/src/arduino-1.6.7/hardware/tools/avr/bin/avrdude 
		-C/usr/src/arduino-1.6.7/hardware/tools/avr/etc/avrdude.conf -v -patmega328p
		-cstk500v1 -P/dev/ttyUSB0 -b19200 -e -Ulock:w:0x3F:m -Uefuse:w:0x05:m -Uhfuse:w:0xDA:m
		-Ulfuse:w:0xE2:m 


	I used a -F option on the terminal to force it to flash the bootloader (or is this only the fuse bits).



